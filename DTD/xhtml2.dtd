<!--
     An altered version of the XHTML 1.0 Strict DTD.
     For support for new XHTML features.
-->

<!--
     Support for HTML5 forms was added due to browsers being unwilling to support XForms (see https://bugzilla.mozilla.org/show_bug.cgi?id=xforms).
-->

<!--
   Extensible HTML version 1.0 Strict DTD

   This is the same as HTML 4 Strict except for
   changes due to the differences between XML and SGML.

   Namespace = http://www.w3.org/1999/xhtml

   For further information, see: http://www.w3.org/TR/xhtml1

   Copyright (c) 1998-2002 W3C (MIT, INRIA, Keio),
   All Rights Reserved. 

   This DTD module is identified by the PUBLIC and SYSTEM identifiers:

   PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
   SYSTEM "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"

   $Revision: 1.24 $
   $Date: 2002/07/31 19:34:51 $

-->

<!--================ Character mnemonic entities =========================-->

<!ENTITY % HTMLlat1 PUBLIC
   "-//W3C//ENTITIES Latin 1 for XHTML//EN"
   "xhtml-lat1.ent">
%HTMLlat1;

<!ENTITY % HTMLsymbol PUBLIC
   "-//W3C//ENTITIES Symbols for XHTML//EN"
   "xhtml-symbol.ent">
%HTMLsymbol;

<!ENTITY % HTMLspecial PUBLIC
   "-//W3C//ENTITIES Special for XHTML//EN"
   "xhtml-special.ent">
%HTMLspecial;

<!--================== Imported Names ====================================-->

<!ENTITY % ContentType "CDATA">
    <!-- media type, as per [RFC2045] -->

<!ENTITY % ContentTypes "CDATA">
    <!-- comma-separated list of media types, as per [RFC2045] -->

<!ENTITY % Charset "CDATA">
    <!-- a character encoding, as per [RFC2045] -->

<!ENTITY % Charsets "CDATA">
    <!-- a space separated list of character encodings, as per [RFC2045] -->

<!ENTITY % LanguageCode "NMTOKEN">
    <!-- a language code, as per [RFC3066] -->

<!ENTITY % Character "CDATA">
    <!-- a single character, as per section 2.2 of [XML] -->

<!ENTITY % Number "CDATA">
    <!-- one or more digits -->

<!ENTITY % LinkTypes "CDATA">
    <!-- space-separated list of link types -->

<!ENTITY % MediaDesc "CDATA">
    <!-- single or comma-separated list of media descriptors -->

<!ENTITY % URI "CDATA">
    <!-- a Uniform Resource Identifier, see [RFC2396] -->

<!ENTITY % UriList "CDATA">
    <!-- a space separated list of Uniform Resource Identifiers -->

<!ENTITY % Datetime "CDATA">
    <!-- date and time information. ISO date format -->

<!ENTITY % Script "CDATA">
    <!-- script expression -->

<!ENTITY % StyleSheet "CDATA">
    <!-- style sheet data -->

<!ENTITY % Text "CDATA">
    <!-- used for titles etc. -->

<!ENTITY % Length "CDATA">
    <!-- nn for pixels or nn% for percentage length -->

<!ENTITY % MultiLength "CDATA">
    <!-- pixel, percentage, or relative -->

<!ENTITY % Pixels "CDATA">
    <!-- integer representing length in pixels -->

<!-- these are used for image maps -->

<!ENTITY % Shape "(rect|circle|poly|default)">

<!ENTITY % Coords "CDATA">
    <!-- comma separated list of lengths -->

<!--=================== Generic Attributes ===============================-->

<!ENTITY % Edit
 "edit    (inserted|deleted|chenged|moved) #IMPLIED
  datetime %Datetime;                      #IMPLIED"
 >

<!ENTITY % Embedding
 "encoding %Charset;     #IMPLIED
  src      %URI;         #IMPLIED
  srctype  %ContentType; #IMPLIED"
>

<!-- attributes for common UI events
  onclick     a pointer button was clicked
  ondblclick  a pointer button was double clicked
  onmousedown a pointer button was pressed down
  onmouseup   a pointer button was released
  onmousemove a pointer was moved onto the element
  onmouseout  a pointer was moved away from the element
  onkeypress  a key was pressed and released
  onkeydown   a key was pressed down
  onkeyup     a key was released
-->
<!ENTITY % legacy-events
 "onclick     %Script;       #IMPLIED
  ondblclick  %Script;       #IMPLIED
  onmousedown %Script;       #IMPLIED
  onmouseup   %Script;       #IMPLIED
  onmouseover %Script;       #IMPLIED
  onmousemove %Script;       #IMPLIED
  onmouseout  %Script;       #IMPLIED
  onkeypress  %Script;       #IMPLIED
  onkeydown   %Script;       #IMPLIED
  onkeyup     %Script;       #IMPLIED"
  >
<!ENTITY % Events
 "xmlns:ev         %URI;                           #IMPLIED
  ev:event         CDATA                           #IMPLIED
  ev:observer      IDREFS                          #IMPLIED
  ev:eventTarged   IDREFS                          #IMPLIED
  ev:handler       %URI;                           #IMPLIED
  ev:phase         (bubble|capture|default|target) #IMPLIED
  ev:propagate     (stop|continue)                 #IMPLIED
  ev:defaultAction (cancel|perform)                #IMPLIED
  %legacy-events;"
>

<!ENTITY % Forms
  "xmlns:xforms              %URI;    #IMPLIED
   xforms:repeat-model       IDREF    #IMPLIED
   xforms:repeat-bind        IDREF    #IMPLIED
   xforms:repeat-nodeset     CDATA    #IMPLIED
   xforms:repeart-startindex %Number; #IMPLIED
   xforms:repat-numbef       %Number; #IMPLIED"
>

<!ENTITY % Map
  "usemap %URI;   #IMPLIED
   ismap (ismap)  #IMPLIED
   shape  %Shape; #IMPLIED
   coords CDATA   #IMPLIED"
>

<!ENTITY % legacy-focus
    "accesskey   CDATA      #IMPLIED
     tabindex    %Number;   #IMPLIED
     onfocus     %Script;   #IMPLIED
     onblur      %Script;   #IMPLIED"
>
<!ENTITY % Hypertext
 "cite      %URI;           #IMPLIED
  charset   %Charset;       #IMPLIED
  href      %URI;           #IMPLIED
  hreflang  %LanguageCode;  #IMPLIED
  hrefmedia %MediaDesc;     #IMPLIED
  hreftype  %ContentTypes;  #IMPLIED
  nextfocus IDREF           #IMPLIED
  prevfocus IDREF           #IMPLIED
  target    CDATA           #IMPLIED
  xml:base  %URI;           #IMPLIED
  %legacy-focus;
  %Map;"
>

<!ENTITY % Meta
 "about    %URI;     #IMPLIED
  content  CDATA     #IMPLIED
  datatype CDATA     #IMPLIED
  typeof   CDATA     #IMPLIED
  property CDATA     #IMPLIED
  rel      CDATA     #IMPLIED
  resource %URI;     #IMPLIED
  rev      CDATA     #IMPLIED"
>

<!-- Copied from the XHTML+ARIA DTD, because we need ARIA support -->
<!-- bring in the WAI-ARIA attributes cause we need them in Common -->
<!ENTITY % ARIA-attributes.module "INCLUDE" >
<![%ARIA-attributes.module;[
<!ENTITY % ARIA-attributes.mod
     PUBLIC "-//W3C//ENTITIES XHTML ARIA Attributes 1.0//EN"
            "aria-attributes-1.mod" >
%ARIA-attributes.mod;]]>

<!-- core attributes common to most elements
  id       document-wide unique id
  class    space separated list of classes
  style    associated style info
  title    advisory title/amplification
-->
<!ENTITY % coreattrs
 "id          CDATA          #IMPLIED
  xml:id      ID             #IMPLIED
  role        CDATA          #IMPLIED
  class       CDATA          #IMPLIED
  style       %StyleSheet;   #IMPLIED
  title       %Text;         #IMPLIED
  media       %MediaDesc;    #IMPLIED
  layout      (irrelevant|relevant) #IMPLIED
  %ARIA.attrib;
  %Edit;
  %Embedding;
  %Events;
  %Forms;
  %Hypertext;
  %Meta;"
  >

<!-- internationalization attributes
  lang        language code (backwards compatible)
  xml:lang    language code (as per XML 1.0 spec)
  dir         direction for weak/neutral text
-->
<!ENTITY % i18n
  "xml:lang    %LanguageCode; #IMPLIED
  dir         (ltr|rtl)      #IMPLIED
  its:translate (yes|no)     #IMPLIED"
  >

<!ENTITY % attrs "%coreattrs; %i18n;">

<!-- XForms -->
  <!ENTITY % xforms.core "xforms:model">
<!ENTITY % xforms.controls "xforms:input|xforms:secret|xforms:textarea|xforms:output|xforms:upload|xforms:range|xforms:trigger|xforms:submit|xforms:select|xforms:select1">
  <!ENTITY % xforms.actions "forms:action|xforms:dispatch|xforms:rebuild|xforms:reculculate|xforms:revalidate|xforms:refresh|xforms:setfoccus|xforms:load|xforms:setvalue|xforms:send|xforms:reset|xforms:message|xforms:insert|xforms:delete|xforms:setindex">
<!ENTITY % xforms.group "xforms:group">
  <!ENTITY % xforms.switch "xforms:switch">
<!ENTITY % xforms.repeat "xforms:repeat">
  <!ENTITY % xforms.misc "%xforms.core; | %xforms.actions; | %xforms.group; | %xforms.switch; | %xforms.repeat;">
<!ENTITY % action.attrs
 "if     CDATA #IMPLIED
  while  CDATA #IMPLIED"
  >

<!-- XEvents -->
<!ENTITY % events.content "ev:action|ev:dispatchEvent|ev:addEventListener|ev:removeEventListener|ev:stopPropagation|ev:preventDefault">


<!--=================== Text Elements ====================================-->

<!ENTITY % special.pre
   "span |map">


<!ENTITY % special
   "%special.pre; | object | a | img | br">

<!ENTITY % fontstyle "tt | i | b | big | small ">

<!ENTITY % ruby "(((rb, (rt | (rp, rt, rp))) | (rbc, rtc, rtc?)))">
<!ENTITY % phrase "em | strong | dfn | code | q |
                   samp | kbd | var | cite | abbr | sub | sup ">

<!ENTITY % legacy-form.elems "input | datalist | select | textarea | label | button">

<!-- these can occur at block or inline level -->
<!ENTITY % misc.inline "ins | del | script">

<!-- these can only occur at block level -->
<!ENTITY % misc "noscript | %misc.inline;">

<!ENTITY % inline "%special; | %fontstyle; | %phrase; | ruby | %xforms.misc; | %legacy-form.elems; | %events.content;">

<!-- %Inline; covers inline or "text-level" elements -->
<!ENTITY % Inline "(#PCDATA | %inline; | %misc.inline;)*">

<!--================== Block level elements ==============================-->

<!ENTITY % legacy-heading "h1 | h2 | h3 | h4 | h5 | h6">
<!ENTITY % heading "h | %legacy-heading; | section">
<!ENTITY % lists "ul | ol | dl">
<!ENTITY % blocktext "pre | separator | l | blockquote | blockcode | address">

<!ENTITY % legacy-fieldset "fieldset">
<!ENTITY % block
     "p | %heading; | div | %lists; | %blocktext; | %legacy-fieldset; | table | access">

<!ENTITY % Block "(%block; | %xforms.misc; | %misc;)*">

<!ENTITY % legacy-form.elem "form">
<!-- %Flow; mixes block and inline and is used for list items etc. -->
<!ENTITY % Flow "(#PCDATA | %block; | %inline; | %misc; | %legacy-form.elem;)*">

<!--================== Content models for exclusions =====================-->


<!-- pre uses %Inline excluding big, small, sup or sup -->

<!ENTITY % pre.content
   "(#PCDATA | %phrase; | %special.pre; | %misc.inline;
      | %xforms.misc; | %legacy-form.elems;)*">

<!-- form uses %Block; excluding form -->

<!ENTITY % legacy-form.content "(%block; | %misc;)*">

<!-- button uses %Flow; but excludes a, form and form controls -->

<!ENTITY % button.content
   "(#PCDATA | p | %heading; | div | %lists; | %blocktext; |
    table | %special; | %phrase; | %misc;)*">

<!--================ Document Structure ==================================-->

<!-- the namespace URI designates the document profile -->

<!ELEMENT html (head, body)>
<!ATTLIST html
  %attrs;
  version     %URI;          #IMPLIED
  xmlns       %URI;          #REQUIRED
  xsi:schemaLocation CDATA   #IMPLIED
  >

<!--================ Document Head =======================================-->

<!ENTITY % xforms.head "%xforms.core; | %xforms.actions;">
<!ENTITY % head.misc "(script|style|meta|link|object|%xforms.head;)*">

<!-- content model is %head.misc; combined with a single
     title in any order -->

<!ELEMENT head ((%head.misc;)*,title,(%head.misc;)*)>

<!ATTLIST head
  %attrs;
  profile     %URI;          #IMPLIED
  >

<!-- The title element is not considered part of the flow of text.
       It should be displayed, for example as the page header or
       window title. Exactly one title is required per document.
    -->
<!ELEMENT title (#PCDATA)>
<!ATTLIST title 
  %attrs;
  >

<!-- generic metainformation -->
<!ELEMENT meta (#PCDATA)>
<!ATTLIST meta
  %attrs;
  >

<!--
  Relationship values can be used in principle:

   a) for document specific toolbars/menus when used
      with the link element in document head e.g.
        start, contents, previous, next, index, end, help
   b) to link to a separate style sheet (rel="stylesheet")
   c) to make a link to a script (rel="script")
   d) by stylesheets to control how collections of
      html nodes are rendered into printed documents
   e) to make a link to a printable version of this document
      e.g. a PostScript or PDF version (rel="alternate" media="print")
-->

<!ELEMENT link EMPTY>
<!ATTLIST link
  %attrs;
  type     %ContentType;   #IMPLIED
  >

<!-- style info, which may include CDATA sections -->
<!ELEMENT style (#PCDATA)>
<!ATTLIST style
  %attrs;
  disabled    (disabled)     #IMPLIED
  type        %ContentType;  #IMPLIED
  xml:space   (preserve)     #FIXED 'preserve'
  >

<!-- script statements, which may include CDATA sections -->
<!ELEMENT script (#PCDATA)>
<!ATTLIST script
  %attrs;
  async       (async)        #IMPLIED
  defer       (defer)        #IMPLIED
  type        %ContentType;  #IMPLIED
  implements  %URI;          #IMPLIED
  xml:space   (preserve)     #FIXED 'preserve'
  >

<!-- alternate content container for non script-based rendering -->

<!ELEMENT noscript %Block;>
<!ATTLIST noscript
  %attrs;
  >

<!--=================== Document Body ====================================-->

<!ENTITY % legacy-body-events
  "onload   %Script;    #IMPLIED
   onunload %Script;    #IMPLIED"
>
<!ELEMENT body %Block;>
<!ATTLIST body
  %attrs;
  %legacy-body-events;
  >

<!ELEMENT div %Flow;>  <!-- generic language/style container -->
<!ATTLIST div
  %attrs;
  >

<!--=================== Paragraphs =======================================-->

<!ELEMENT p %Flow;>
<!ATTLIST p
  %attrs;
  >

<!--=================== Headings =========================================-->

<!ELEMENT section %Flow;>
<!ATTLIST section
  %attrs;
  >

<!ELEMENT h  %Inline;>
<!ATTLIST h
   %attrs;
   >

<!ELEMENT h1 %Flow;>
<!ATTLIST h1
    %attrs;
    >
<!ELEMENT h2 %Flow;>
<!ATTLIST h2
    %attrs;
    >
<!ELEMENT h3 %Flow;>
<!ATTLIST h3
    %attrs;
    >
<!ELEMENT h4 %Flow;>
<!ATTLIST h4
    %attrs;
    >
<!ELEMENT h5 %Flow;>
<!ATTLIST h5
    %attrs;
    >
<!ELEMENT h6 %Flow;>
<!ATTLIST h6
    %attrs;
    >

<!--=================== Lists ============================================-->

<!-- Unordered list -->

<!ELEMENT ul (li+)>
<!ATTLIST ul
  %attrs;
  >

<!-- Ordered (numbered) list -->

<!ELEMENT ol (caption?,li+)>
<!ATTLIST ol
  %attrs;
  >

<!-- list item -->

<!ELEMENT li %Flow;>
<!ATTLIST li
  %attrs;
  value %Number; #IMPLIED
  >

<!-- definition lists - dt for term, dd for its definition -->

<!ELEMENT dl (dt|dd|di)+>
<!ATTLIST dl
  %attrs;
  >

<!ELEMENT dt %Inline;>
<!ATTLIST dt
  %attrs;
  >

<!ELEMENT dd %Flow;>
<!ATTLIST dd
  %attrs;
  >

<!ELEMENT di (dt|dd)+>
<!ATTLIST di
  %attrs;
  >

<!--=================== Address ==========================================-->

<!-- information on author -->

<!ELEMENT address %Inline;>
<!ATTLIST address
  %attrs;
  >

<!--=================== Horizontal Rule ==================================-->

<!ELEMENT separator EMPTY>
<!ATTLIST separator
  %attrs;
  >

<!ELEMENT l %Flow;>
<!ATTLIST l
  %attrs;
>

<!--=================== Preformatted Text ================================-->

<!-- content is %Inline; excluding "object|sub|sup" -->

<!ELEMENT pre %pre.content;>
<!ATTLIST pre
  %attrs;
  xml:space (preserve) #FIXED 'preserve'
  >

<!--=================== Block-like Quotes ================================-->

<!ELEMENT blockquote %Block;>
<!ATTLIST blockquote
  %attrs;
  >

<!ELEMENT blockcode %Flow;>
<!ATTLIST blockcode
  %attrs;
  >

<!--===================== Inline Elements ================================-->

<!ELEMENT span %Inline;> <!-- generic language/style container -->
<!ATTLIST span
  %attrs;
  >

<!ELEMENT a %Inline;>
<!ATTLIST a
    %attrs;
    >

<!ELEMENT img (caption | %Text;)*>
<!ATTLIST img
    %attrs;
    alt      CDATA     #IMPLIED
    >

<!ELEMENT br EMPTY>
<!ATTLIST br %coreattrs;>

<!ELEMENT em %Inline;>   <!-- emphasis -->
<!ATTLIST em %attrs;>

<!ELEMENT strong %Inline;>   <!-- strong emphasis -->
<!ATTLIST strong %attrs;>

<!ELEMENT dfn %Inline;>   <!-- definitional -->
<!ATTLIST dfn %attrs;>

<!ELEMENT code %Inline;>   <!-- program code -->
<!ATTLIST code %attrs;>

<!ELEMENT samp %Inline;>   <!-- sample -->
<!ATTLIST samp %attrs;>

<!ELEMENT kbd %Inline;>  <!-- something user would type -->
<!ATTLIST kbd %attrs;>

<!ELEMENT var %Inline;>   <!-- variable -->
<!ATTLIST var %attrs;>

<!ELEMENT cite %Inline;>   <!-- citation -->
<!ATTLIST cite %attrs;>

<!ELEMENT abbr %Inline;>   <!-- abbreviation -->
<!ATTLIST abbr %attrs;
    full IDREF #IMPLIED>

<!ELEMENT q %Inline;>   <!-- inlined quote -->
<!ATTLIST q
  %attrs;
  >

<!ELEMENT sub %Inline;> <!-- subscript -->
<!ATTLIST sub %attrs;>

<!ELEMENT sup %Inline;> <!-- superscript -->
<!ATTLIST sup %attrs;>

<!ELEMENT tt %Inline;>   <!-- fixed pitch font -->
<!ATTLIST tt %attrs;>

<!ELEMENT i %Inline;>   <!-- italic font -->
<!ATTLIST i %attrs;>

<!ELEMENT b %Inline;>   <!-- bold font -->
<!ATTLIST b %attrs;>

<!--==================== Object ======================================-->
<!--
  object is used to embed objects as part of HTML pages.
  param elements should precede other content. Parameters
  can also be expressed as attribute/value pairs on the
  object element itself when brevity is desired.
-->

<!ELEMENT object (#PCDATA | caption | param | standby | %block; | %legacy-form.elem; | %inline; | %misc;)*>
<!ATTLIST object
  %attrs;
  archive     %UriList;      #IMPLIED
  declare     (declare)      #IMPLIED
  content-length %Number;    #IMPLIED
  type        %ContentType;  #IMPLIED
  data        %URI;          #IMPLIED
  >

<!--
  param is used to supply a named property value.
  In XML it would seem natural to follow RDF and support an
  abbreviated syntax where the param elements are replaced
  by attribute value pairs on the object start tag.
-->
<!ELEMENT param EMPTY>
<!ATTLIST param
  id          ID             #IMPLIED
  name        CDATA          #IMPLIED
  value       CDATA          #IMPLIED
  type        %ContentType;  #IMPLIED
  valuetype   (data|ref|object) "data"
  >

<!ELEMENT standby %Flow;>
<!ATTLIST standby %attrs;>

<!--================== Client-side image maps ============================-->

<!-- These can be placed in the same document or grouped in a
     separate document although this isn't yet widely supported -->

<!ELEMENT map (%block; | %legacy-form.elem; | %misc;)+>
<!ATTLIST map
  %attrs;
  name        NMTOKEN        #IMPLIED
  >

<!--======================= Tables =======================================-->

<!-- Derived from IETF HTML table standard, see [RFC1942] -->

<!--
 The border attribute sets the thickness of the frame around the
 table. The default units are screen pixels.

 The frame attribute specifies which parts of the frame around
 the table should be rendered. The values are not the same as
 CALS to avoid a name clash with the valign attribute.
-->
<!ENTITY % TFrame "(void|above|below|hsides|lhs|rhs|vsides|box|border)">

<!--
 The rules attribute defines which rules to draw between cells:

 If rules is absent then assume:
     "none" if border is absent or border="0" otherwise "all"
-->

<!ENTITY % TRules "(none | groups | rows | cols | all)">

<!ELEMENT table
     (caption?, title?, summary?, ( col* | colgroup* ), (( thead?, tfoot?, tbody+ ) | ( tr+ ))) >
<!ELEMENT caption  %Inline;>
<!ELEMENT thead    (tr)+>
<!ELEMENT tfoot    (tr)+>
<!ELEMENT tbody    (tr)+>
<!ELEMENT colgroup (col)*>
<!ELEMENT col      EMPTY>
<!ELEMENT tr       (th|td)+>
<!ELEMENT th       %Flow;>
<!ELEMENT td       %Flow;>

<!ATTLIST table
  %attrs;
  >

<!ATTLIST caption
  %attrs;
  >

<!ELEMENT summary %Flow;>
<!ATTLIST summary %attrs;>

<!--
colgroup groups a set of col elements. It allows you to group
several semantically related columns together.
-->
<!ATTLIST colgroup
  %attrs;
  span        %Number;       "1"
  >

<!--
 col elements define the alignment properties for cells in
 one or more columns.

 The width attribute specifies the width of the columns, e.g.

     width=64        width in screen pixels
     width=0.5*      relative width of 0.5

 The span attribute causes the attributes of one
 col element to apply to more than one column.
-->
<!ATTLIST col
  %attrs;
  span        %Number;       "1"
  >

<!--
    Use thead to duplicate headers when breaking table
    across page boundaries, or for static headers when
    tbody sections are rendered in scrolling panel.

    Use tfoot to duplicate footers when breaking table
    across page boundaries, or for static footers when
    tbody sections are rendered in scrolling panel.

    Use multiple tbody sections when rules are needed
    between groups of table rows.
-->
<!ATTLIST thead
  %attrs;
  >

<!ATTLIST tfoot
  %attrs;
  >

<!ATTLIST tbody
  %attrs;
  >

<!ATTLIST tr
  %attrs;
  >


<!-- Scope is simpler than headers attribute for common tables -->
<!ENTITY % Scope "(row|col|rowgroup|colgroup)">

<!-- th is for headers, td for data and for cells acting as both -->

<!ATTLIST th
  %attrs;
  abbr        %Text;         #IMPLIED
  axis        CDATA          #IMPLIED
  colspan     %Number;       "1"
  headers     IDREFS         #IMPLIED
  rowspan     %Number;       "1"
  scope       %Scope;        #IMPLIED
  >

<!ATTLIST td
  %attrs;
  abbr        %Text;         #IMPLIED
  axis        CDATA          #IMPLIED
  colspan     %Number;       "1"
  headers     IDREFS         #IMPLIED
  rowspan     %Number;       "1"
  scope       %Scope;        #IMPLIED
  >

<!-- Access Module -->
<!ELEMENT accent %Flow;>
<!ATTLIST access
  %attrs;
  activate   (true|false)    #IMPLIED
  key        CDATA           #IMPLIED
  order      (document|list) #IMPLIED
  targetid   IDREF           #IMPLIED
  targetrole %URI;           #IMPLIED
  >

<!-- Ruby Module-->
<!ELEMENT ruby %ruby;>
<!ATTLIST ruby
  %attrs;
  >

<!ELEMENT rbc (rb)+>
<!ATTLIST rbc
  %attrs;
  >

<!ELEMENT rtc (rt)+>
<!ATTLIST rtc
  %attrs;
  >

<!ELEMENT rt %Inline;>
<!ATTLIST rt
  %attrs;
  rbspan %Number; #IMPLIED
  >

<!ELEMENT rb %Inline;>
<!ATTLIST rb
  %attrs;
  rbspan %Number; #IMPLIED
  >

<!ELEMENT rp (#PCDATA)>
<!ATTLIST rp
  %attrs;
 >

<!--================ Forms ===============================================-->
<!ELEMENT %legacy-form.elem; %legacy-form.content;>   <!-- forms shouldn't be nested -->

<!ATTLIST %legacy-form.elem;
  %attrs;
  action      %URI;          #REQUIRED
  method      (get|post)     "get"
  enctype     %ContentType;  "application/x-www-form-urlencoded"
  onsubmit    %Script;       #IMPLIED
  onreset     %Script;       #IMPLIED
  accept      %ContentTypes; #IMPLIED
  accept-charset %Charsets;  #IMPLIED
  >

<!--
  Each label must not contain more than ONE field
  Label elements shouldn't be nested.
-->
<!ELEMENT label %Inline;>
<!ATTLIST label
  %attrs;
  for         IDREF          #IMPLIED
  >

<!ENTITY % InputType
  "(text | password | checkbox |
    radio | submit | reset |
    file | hidden | image | button |
    color | date | datetime | email |
    number | range | search | tel |
    time | url | week)"
   >

<!-- the name attribute is required for all but submit & reset -->

<!ELEMENT input EMPTY>     <!-- form control -->
<!ATTLIST input
  %attrs;
  type        %InputType;    "text"
  name        CDATA          #IMPLIED
  value       CDATA          #IMPLIED
  checked     (checked)      #IMPLIED
  disabled    (disabled)     #IMPLIED
  readonly    (readonly)     #IMPLIED
  required    (required)     #IMPLIED
  size        CDATA          #IMPLIED
  maxlength   %Number;       #IMPLIED
  minlength   %Number;       #IMPLIED
  alt         CDATA          #IMPLIED
  pattern     CDATA          #IMPLIED
  min         %Number;       #IMPLIED
  max         %Number;       #IMPLIED
  step        %Number;       #IMPLIED
  list        IDREF          #IMPLIED
  placeholder CDATA          #IMPLIED
>

<!ELEMENT datalist %Flow;>
<!ATTLIST atalist
    %attrs;
>

<!ELEMENT select (optgroup|option)+>  <!-- option selector -->
<!ATTLIST select
  %attrs;
  name        CDATA          #IMPLIED
  size        %Number;       #IMPLIED
  multiple    (multiple)     #IMPLIED
  disabled    (disabled)     #IMPLIED
  onchange    %Script;       #IMPLIED
  >

<!ELEMENT optgroup (option)+>   <!-- option group -->
<!ATTLIST optgroup
  %attrs;
  disabled    (disabled)     #IMPLIED
  label       %Text;         #REQUIRED
  >

<!ELEMENT option (#PCDATA)>     <!-- selectable choice -->
<!ATTLIST option
  %attrs;
  selected    (selected)     #IMPLIED
  disabled    (disabled)     #IMPLIED
  label       %Text;         #IMPLIED
  value       CDATA          #IMPLIED
  >

<!ELEMENT textarea (#PCDATA)>     <!-- multi-line text field -->
<!ATTLIST textarea
  %attrs;
  name        CDATA          #IMPLIED
  rows        %Number;       #REQUIRED
  cols        %Number;       #REQUIRED
  disabled    (disabled)     #IMPLIED
  readonly    (readonly)     #IMPLIED
  onselect    %Script;       #IMPLIED
  onchange    %Script;       #IMPLIED
  >

<!--
  The fieldset element is used to group form fields.
  Only one legend element should occur in the content
  and if present should only be preceded by whitespace.
-->
<!ELEMENT fieldset (#PCDATA | legend | %block; | form | %inline; | %misc;)*>
<!ATTLIST fieldset
  %attrs;
  >

<!ELEMENT legend %Inline;>     <!-- fieldset label -->
<!ATTLIST legend
  %attrs;
  >

<!--
 Content is %Flow; excluding a, form and form controls
--> 
<!ELEMENT button %button.content;>  <!-- push button -->
<!ATTLIST button
  %attrs;
  name        CDATA          #IMPLIED
  value       CDATA          #IMPLIED
  type        (button|submit|reset) "submit"
  disabled    (disabled)     #IMPLIED
  >

<!-- XForms Module -->
  <!ELEMENT xforms:model (%xforms.actions;)+>
<!ATTLIST xforms:model
  functions CDATA #IMPLIED
  schema    CDATA #IMPLIED
  version   CDATA #IMPLIED
>

<!ENTITY % xforms.bind
  "%attrs;
   ref     CDATA #IMPLIED
   model   IDREF #IMPLIED
   bind    IDREF #IMPLIED
   nodeset CDATA #IMPLIED"
>

<!ENTITY % control.attrs
  "%xforms.bind;
   inputmode CDATA #IMPLIED
   incrermental (true|false) 'false'"
>

<!ENTITY % control.subs "(xforms:label|xforms:help|xforms:hint|xforms:alert)*">

<!ELEMENT xforms:input %control.subs;>
<!ATTLIST xforms:input
  %control.attrs;
>

<!ELEMENT xforms:secret %control.subs;>
<!ATTLIST xforms:secret
  %control.attrs;
    >

<!ELEMENT xforms:textarea %control.subs;>
<!ATTLIST xforms:textarea
  %control.attrs;
    >

<!ELEMENT xforms:output (xforms:label?, xforms:hint?)>
<!ATTLIST xforms:output
  %control.attrs;
    >

<!ELEMENT xforms:upload ((%control.subs;), xforms:filename?, xforms:mediatype?)>
<!ATTLIST xforms:upload
  %control.attrs;
    >

<!ELEMENT xforms:filename EMPTY>
<!ATTLIST xforms:filename
  %control.attrs;
>

<!ELEMENT xforms:mediatype EMPTY>
<!ATTLIST xforms:mediatype
  %control.attrs;
>

<!ELEMENT xforms:range %control.subs;>
<!ATTLIST xforms:range
  %control.attrs;
  start %Number; #IMPLIED
  end   %Number; #IMPLIED
  step  %Number; #IMPLIED
    >

<!ELEMENT xforms:trigger %control.subs;>
<!ATTLIST xforms:trigger
  %control.attrs;
    >

<!ELEMENT xforms:submit %control.subs;>
<!ATTLIST xforms:submit
  %control.attrs;
  sumbmission IDREF #IMPLIED
    >

<!ELEMENT xforms:select ((%control.subs;), (xforms:choices|xforms:item|xforms:value)*)>
<!ATTLIST xforms:select
  %control.attrs;
  selection CDATA #IMPLIED
    >

<!ELEMENT xforms:select1 ((%control.subs;), (xforms:choices|xforms:item|xforms:value)*)>
<!ATTLIST xforms:select1
  %control.attrs;
  selection CDATA #IMPLIED
    >

<!ELEMENT xforms:label (#PCDATA)>
<!ATTLIST xforms:label
  %attrs;
>

<!ELEMENT xforms:help (#PCDATA)>
<!ATTLIST xforms:help
  %attrs;
>

<!ELEMENT xforms:hint (#PCDATA)>
<!ATTLIST xforms:hint
  %attrs;
>

<!ELEMENT xforms:alert (#PCDATA)>
<!ATTLIST xforms:alert
  %attrs;
>

<!ELEMENT xforms:choices (xforms:item)+>
<!ATTLIST xforms:choices
  %attrs;
>

<!ELEMENT xforms:item (xforms:value|xforms:label|xforms:help|xforms:hint|xforms:alert|%xforms.actions;)*>
<!ATTLIST xforms:item
  %attrs;
>

<!ELEMENT xforms:value (#PCDATA)>
<!ATTLIST xforms:value
  %attrs;
  value CDATA #IMPLIED
>

<!ELEMENT xforms:action (xforms:action)*>
<!ATTLIST xforms:action
  %attrs;
  %action.attrs;
  >

<!ELEMENT xforms:setvalue EMPTY>
<!ATTLIST xforms:setvalue
  %xforms.bind;
  %action.attrs;
  value CDATA #IMPLIED>

<!ELEMENT xforms:insert EMPTY>
<!ATTLIST xforms:insert
  %xforms.bind;
  %action.attrs;
  context  CDATA          #IMPLIED
  at       CDATA          #IMPLIED
  position (before|after) #IMPLIED
  origin   CDATA          #IMPLIED
>

<!ELEMENT xforms:delete EMPTY>
<!ATTLIST xforms:delete
  %xforms.bind;
  %action.attrs;
  context CDATA #IMPLIED
  at      CDATA #IMPLIED
  >

<!ELEMENT xforms:setindex EMPTY>
<!ATTLIST xforms:setindex
  %attrs;
  %action.attrs;
  repeat IDREF    #IMPLIED
  index  %Number; #IMPLIED
    >

<!ELEMENT xforms:toggle (xforms:case?)>
<!ATTLIST xforms:toggle
  %xforms.bind;
  %action.attrs;
  case IDREF #IMPLIED>

<!ELEMENT xforms:case (#PCDATA|%xforms.controls;|xforms:label|xforms:group|xforms:switch|xforms:repeat|%xforms.actions;)*>
<!ATTLIST xforms:case
  %attrs;
  value CDATA #IMPLIED
  selected (selected) #IMPLIED
  >

<!ELEMENT xforms:setfocus (xforms:control?)>
<!ATTLIST xforms:setfocus
  %xforms.bind;
  %action.attrs;
  control IDREF #IMPLIED
    >

<!ELEMENT xforms:control (#PCDATA)>
<!ATTLIST xforms:control
  %attrs;
  value CDATA #IMPLIED
  >

<!ELEMENT xforms:dispatch (xforms:name?,xforms:targetid?,xforms:delay?)>
<!ATTLIST xforms:dispatch
  %xforms.bind;
  %action.attrs;
  name       NMTOKEN      #IMPLIED
  targetid   IDREF        #IMPLIED
  delay      %Number;     #IMPLIED
  bubbles    (bubbles)    #IMPLIED
  cancelable (cancelable) #IMPLIED
  >

<!ELEMENT xforms:name (#PCDATA)>
<!ATTLIST xforms:name
  %attrs;
  value CDATA #IMPLIED>

<!ELEMENT xforms:targetid (#PCDATA)>
<!ATTLIST xforms:targetid
  %attrs;
  value CDATA #IMPLIED>

<!ELEMENT xforms:delay (#PCDATA)>
<!ATTLIST xforms:delay
  %attrs;
  value CDATA #IMPLIED>

<!ELEMENT xforms:rebuild EMPTY>
<!ATTLIST xforms:rebuild
  %xforms.bind;
  %action.attrs;
  >

<!ELEMENT xforms:recalculate EMPTY>
<!ATTLIST xforms:recalculate
  %xforms.bind;
  %action.attrs;
>

<!ELEMENT xforms:revalidate EMPTY>
<!ATTLIST xforms:revalidate
  %xforms.bind;
  %action.attrs;
  >

<!ELEMENT xforms:refresh EMPTY>
<!ATTLIST xforms:refresh
  %xforms.bind;
  %action.attrs;
  >

<!ELEMENT xforms:reset EMPTY>
<!ATTLIST xforms:reset
  %xforms.bind;
  %action.attrs;
  >

<!ELEMENT xforms:load (xforms:resource?)>
<!ATTLIST xforms:load
  %xforms.bind;
  %action.attrs;
  show (new|replace) #IMPLIED
  >

<!ELEMENT xforms:resource (#PCDATA)>
<!ATTLIST xforms:resource
  %attrs;
  value CDATA #IMPLIED>

<!ELEMENT xforms:send EMPTY>
<!ATTLIST xforms:send
  %xforms.bind;
  %action.attrs;
  submission IDREF #IMPLIED
  >

<!ELEMENT xforms:message %Flow;>
<!ATTLIST xforms:message
  %xforms.bind;
  %action.attrs;
  level CDATA #IMPLIED
  >

<!ELEMENT xforms:group (xforms:label?, (%xforms.controls; |  xforms:group | xforms:switch | xforms:repeat)*)>
<!ATTLIST xforms:group
  %xforms.bind;
  %action.attrs;
  >

<!ELEMENT xforms:switch (case)+>
<!ATTLIST xforms:switch
  %xforms.bind;
  >

<!ELEMENT xforms:repeat ((%xforms.controls;)|xforms:group|xforms:switch|xforms:repeat|%xforms.actions;)>
<!ATTLIST xforms:repeat
  %xforms.bind;
  startindex %Number; #IMPLIED
  number     %Number; #IMPLIED
  >

<!-- XEvents Module -->
<!ELEMENT ev:action ( ev:action | ev:dispatchEvent | ev:addEventListener | ev:removeEventListener | script | ev:stopPropagation | ev:preventDefault )+>
<!ATTLIST ev:action
  %attrs;
  %action.attrs;
  declare        (declare) #IMPLIED
  >

<!ELEMENT ev:dispatchEvent EMPTY>
<!ATTLIST ev:dispatchEvent
  %attrs;
  targetid   IDREFS       #IMPLIED
  bubbles    (bubbles)    #IMPLIED
  cancelable (cancelable) #IMPLIED
  >

<!ELEMENT ev:addEventListener EMPTY>
<!ATTLIST ev:addEventListener %attrs;>

<!ELEMENT ev:removeEventListener EMPTY>
<!ATTLIST ev:removeEventListener
  %attrs;
  >

<!ELEMENT ev:stopPropagation EMPTY>
<!ATTLIST ev:stopPropagation
  %attrs;
  >

<!ELEMENT ev:preventDefault EMPTY>
<!ATTLIST ev:preventDefault
  %attrs;
  >
